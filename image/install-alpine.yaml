---
- name: install dependencies and envoy to machine
  hosts: all
  become: true
  tasks:
    # alpine updates
    - name: update alpine
      command: "apk upgrade --update-cache --available"

    # use dhcpcd instead of udhcpd (for ipv6)
    - name: install dhcpcd
      command: "apk add dhcpcd"

    - name:
      ansible.builtin.lineinfile:
        path: /etc/dhcpcd.conf
        search_string: 'slaac private'
        line: '#slaac private'

    - name:
      ansible.builtin.lineinfile:
        path: /etc/dhcpcd.conf
        search_string: 'slaac hwaddr'
        line: 'slaac hwaddr'

    # sshd config
    - name: disable root login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: ^PermitRootLogin.*$
        line: 'PermitRootLogin no'

    - name: disable login without password
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: ^PermitEmptyPasswords.*$
        line: 'PermitEmptyPasswords no'

    - name: disable password login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: ^PasswordAuthentication.*$
        line: 'PasswordAuthentication no'

    # keepalived
    - name: install keepalived
      command: "apk add keepalived"

    - name: Delete keepalived config
      file:
        state: absent
        path: /etc/keepalived/keepalived.conf

    - name: upload keepalivedstats-script.sh
      copy:
        src: ./keepalivedstats-script.sh
        dest: /usr/local/bin/keepalivedstats-script.sh
        owner: root
        group: root
        mode: 0755

    - name: add openrc keepalivedstats
      copy:
        src: ./keepalivedstats.sh
        dest: /etc/init.d/keepalivedstats
        owner: root
        group: root
        mode: 0755

    # yawol user
    - name: Creating yawol user
      user:
        name: "yawol"
        shell: /bin/ash

    - name: Create a directory for yawol
      file:
        path: /etc/yawol
        state: directory
        mode: '0755'

    - name: add sudoers file for yawol
      copy:
        src: ./yawol-sudoers
        dest: /etc/sudoers.d/yawol
        owner: root
        group: root
        mode: 0644

    # yawoldebug user
    - name: Creating yawol user
      user:
        name: "yawoldebug"
        shell: /bin/ash
        password: "*"

    - name: Create a .ssh directory for yawoldebug user
      file:
        path: /home/yawoldebug/.ssh
        owner: "yawoldebug"
        state: directory
        mode: '0700'

    - name: Create a .ssh/authorized_keys file for yawoldebug user
      file:
        path: /home/yawoldebug/.ssh/authorized_keys
        owner: "yawoldebug"
        state: touch
        mode: '0600'

    # envoy
    - name: Copy envoy in place
      copy:
        src: ../out/envoy/envoy
        dest: /usr/local/bin/envoy
        owner: root
        group: root
        mode: 0755

    - name: Copy envoy libs in place
      copy:
        src: ../out/envoy/lib/
        dest: /lib/
        owner: root
        group: root
        mode: preserve

    - name: Create a lib64 directory
      file:
        path: /lib64
        state: directory
        mode: '0755'

    - name: Create a symbolic link for ld-linux-x86-64.so.2
      file:
        src: /lib/ld-linux-x86-64.so.2
        dest: /lib64/ld-linux-x86-64.so.2
        state: hard

    - name: add envoy config
      copy:
        src: ./envoy-config.yaml
        dest: /etc/yawol/envoy.yaml
        owner: root
        group: root
        mode: 0644

    - name: add openrc envoy
      copy:
        src: ./envoy.sh
        dest: /etc/init.d/envoy
        owner: root
        group: root
        mode: 0755

    - name: add cap_net_bind_service for envoy
      capabilities:
        path: /usr/local/bin/envoy
        capability: cap_net_bind_service=ep
        state: present

    - name: test envoy
      command: "/usr/local/bin/envoy --help"

    - name: Delete folder with wrong permissions
      file:
        path: /dev/shm/envoy_shared_memory_0
        state: absent
        mode: '0755'

    # yawollet
    - name: upload yawollet
      copy:
        src: ../out/yawollet
        dest: /usr/local/bin/yawollet
        owner: root
        group: root
        mode: 0755

    - name: add openrc yawollet
      copy:
        src: ./yawollet.sh
        dest: /etc/init.d/yawollet
        owner: root
        group: root
        mode: 0755

    # promtail
    - name: upload promtail
      copy:
        src: ../out/promtail
        dest: /usr/local/bin/promtail
        owner: root
        group: root
        mode: 0755

    - name: Creating promtail user
      user:
        name: "promtail"
        shell: /bin/ash
        groups: wheel
        append: true

    - name: Create a directory for promtail
      file:
        path: /etc/promtail
        state: directory
        mode: '0755'

    - name: add openrc promtail
      copy:
        src: ./promtail.sh
        dest: /etc/init.d/promtail
        owner: root
        group: root
        mode: 0755

    # reload openrc
    - name: Reload openrc
      command: "rc-update -u"

    - name: enable envoy
      command: "rc-update add envoy default"

    - name: enable yawollet
      command: "rc-update add yawollet default"

    - name: enable keepalived
      command: "rc-update add keepalived default"

    - name: enable keepalivedstats
      command: "rc-update add keepalivedstats default"

    - name: enable cloud-config
      command: "rc-update add cloud-config default"
    - name: enable cloud-init-local
      command: "rc-update add cloud-init-local default"
    - name: enable cloud-final
      command: "rc-update add cloud-final default"

    - name: add sysctl file
      copy:
        src: ./sysctl-yawollet.conf
        dest: /etc/sysctl.d/yawollet.conf
        owner: root
        group: root
        mode: 0644

    - name: Create log folder
      file:
        path: /var/log/yawol
        state: directory
        mode: '0755'
        owner: yawol

    - name: Set ulimit
      lineinfile:
        path: /etc/rc.conf
        regexp: "rc_ulimit="
        line: "rc_ulimit='-n 130000'"

    - name: Set boot timout to 1
      lineinfile:
        path: /boot/extlinux.conf
        regexp: "TIMEOUT"
        line: "TIMEOUT 1"

    - name: Set chrony fast boot
      lineinfile:
        path: /etc/conf.d/chronyd
        regexp: "FAST_STARTUP"
        line: "FAST_STARTUP=yes"

    - name: Set boot to parallel
      lineinfile:
        path: /etc/rc.conf
        regexp: "rc_parallel"
        line: "rc_parallel='YES'"

    - name: Restart crashed services
      ansible.builtin.cron:
        name: restart crashed services
        user: root
        job: "/bin/rc-status -c | /usr/bin/xargs -I{} service {} restart"

    - name: disable ssh service
      command: "rc-update del sshd"

    - name: cleanup
      command: "rm -rf /var/cache/apk/*"

    - name: more cleanup
      command: "cloud-init clean -l -s"

    - name: cleanup ssh-keys
      lineinfile:
        path: /home/alpine/.ssh/authorized_keys
        state: absent
        regexp: '.*'

